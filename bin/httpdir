#!/usr/bin/env sh
# Serve a local directory via HTTP (via socat).

rep() {
    local status="${1:?Status is required.}"
    shift 1

    printf '%s %s %s\n' "$status" "$HTTP_METHOD" "$HTTP_PATH" 1>&2
    printf 'HTTP/1.0 %s\r\n' "$status"
    for hdr in "$@"; do
        printf '%s\r\n' "$hdr"
    done
    printf '\r\n'
    cat
}

http() {
    local HTTP_METHOD
    local HTTP_PATH
    local HTTP_VERSION

    read -r HTTP_METHOD HTTP_PATH HTTP_VERSION
    local rpath="$PWD$HTTP_PATH"

    if [[ "$rpath" = *..* ]]; then
        printf '' | rep 400
        exit
    fi

    if [ -r "${rpath}/index.html" ]; then
        rpath="${rpath}/index.html"
    fi

    if [[ -d "$rpath" ]]; then
        ls "$rpath" | rep 200
        exit
    fi

    if [[ -r "$rpath" ]]; then
        local clen="$(wc -c < "$rpath")"
        local ctype=""

        case "$rpath" in
            *.js) ctype='application/javascript';;
            *.json) ctype='application/json';;
            *) ctype="$(file -b --mime-type "$rpath")";;
        esac

        cat "$rpath" | rep 200 \
            "Content-Type: ${ctype}" \
            "Content-Length: ${clen}"
        exit
    fi

    printf '' | rep 404
}

mk_cert() {
    openssl req -x509 \
        -newkey rsa:4096 \
        -days 365 \
        -nodes \
        -subj "/C=US/ST=Utah/L=Ogden/O=ACME, Inc./OU=Org/CN=localhost" \
        -keyout /tmp/httpdirkey.pem \
        -out /tmp/httpdircert.pem \
        2>/dev/null
}

main() {
    local opt
    local OPTIND
    local OPTARG
    local listen="TCP-LISTEN"
    local port="8000"
    local ssl=""

    while getopts p:s opt; do
        case $opt in
        p) port="$OPTARG";;
        s) mk_cert;
            ssl=",cert=/tmp/httpdircert.pem,key=/tmp/httpdirkey.pem,verify=0";
            listen="OPENSSL-LISTEN";
            ;;
        esac
    done
    shift $(( OPTIND - 1 ))

    if [[ $# -eq 0 ]]; then
        printf '%s on port %s\n' "$listen" "$port"
        socat "${listen}:${port},fork,reuseaddr${ssl}" EXEC:"${0} http"
    else
        "$1" "$@"
    fi
}

# set -x
main "$@"
