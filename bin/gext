#!/usr/bin/env zsh
# gext - A wrapper for find/grep to parallelize and search by extension

gext() {
    local spath search ext help is_icase

    spath="$1"
    search="$2"
    ext="$3"

    help="Usage: gext ./somepath sometext [file-name-pattern]
    Search will be case-sensitive if the search text contains capital letters.

    gext . thing
    gext . thing '*.py'
    gext . thing 'specific-file.*'
    gext . thing '*' -l
    "

    # Output help if missing path or search
    [[ -n "$spath" ]] && [[ -n "$search" ]] || { printf '%s\n' "$help"; return 1; }
    shift 2

    # Pass any remaining args through to the final grep as $@.
    # TODO: gext should take it's own params via zparseopts in order to pass
    # different args to the various sub commands.
    [[ -n "$ext" ]] && shift 1

    # Check for capital letters in the search pattern
    [[ "${#search//[^A-Z]}" -eq 0 ]] && is_icase=1

    # set -x
    ffind "${spath}" \
        '(' -type f -o -type l ')' \
        ${ext:+-name} \
        ${ext:+$ext} \
        -print0 \
    | xargs -0 -P8 \
        grep --color \
        ${is_icase:+-i} \
        -nH -E -e "${search}" "${@?}"
}

gext "$@"
