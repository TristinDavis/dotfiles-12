set -g default-terminal "xterm-256color"

### Screen-like keybindings.
unbind C-b
set -g prefix C-a
bind C-a send-prefix
bind a send-prefix
bind A command-prompt "rename-window %%"
setw -g automatic-rename off
set -g mouse off

bind Escape copy-mode
# Default is too slow which is annoying during heavy-use of the copy buffer
set -s escape-time 100
set -g display-time 1500

# vi-keys everywhere; anything else would be uncivilized.
setw -g mode-keys vi
set -g status-keys vi
setw -g xterm-keys on

# Move between windows/panes.
bind C-a last-window
bind C-^ last-pane
bind " " next-window
bind BSpace previous-window
bind '"' choose-window
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind h if-shell "$is_vim" "send-keys C-w h" "select-pane -L"
bind j if-shell "$is_vim" "send-keys C-w j" "select-pane -D"
bind k if-shell "$is_vim" "send-keys C-w k" "select-pane -U"
bind l if-shell "$is_vim" "send-keys C-w l" "select-pane -R"
bind H command-prompt -p \
    "Change width to lines (current #{pane_width}):" "resize-pane -x %1"
bind J command-prompt -p \
    "Change height to lines (current #{pane_height}):" "resize-pane -y %1"
bind K command-prompt -p \
    "Change height to lines (current #{pane_height}):" "resize-pane -y %1"
bind L command-prompt -p \
    "Change width to lines (current #{pane_width}):" "resize-pane -x %1"
bind y setw synchronize-panes\; \
    display "panes synchronized: #{?pane_synchronized,ON,OFF}"
bind s command-prompt "swap-window -t %1"
bind S command-prompt "move-window -r -t %1"
bind n movew -r\; display "Windows renumbered."

# Splits (horizontal & vertical, split current pane or full window)
bind | split-window -h -c "#{pane_current_path}"
bind \ split-window -b -h -f -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -b -v -f -c "#{pane_current_path}"
bind r next-layout
bind R previous-layout
bind T command-prompt -p "Select layout (main|even|tiled)-(hor|vert):" "select-layout %%"
bind p command-prompt -p "put pane into:"  "join-pane -t '%%'"
bind P command-prompt -p "pull pane from:"  "join-pane -s '%%'"
bind C new-window -c "#{pane_current_path}"

# Pre-configured window and pane layouts
bind W run "tmux renamew work; tmux splitw -l 3 -c '#{pane_current_path}'; tmux selectp -U"

# Nice, big scrollback buffer (lines).
set -g history-limit 100000
bind C-l clear-history\; display "History cleared."

# Read and write and delete paste buffer.
bind > choose-buffer \
    'run "tmux save-buffer -b %% - | xclip -i -select clipboard"'
bind < run 'xclip -o -selection clipboard | tmux load-buffer -'
bind + command-prompt "delete-buffer -b %1"

# Toggle activity/silence monitoring.
bind m setw monitor-activity\; display \
    "Watching for activity: #{?monitor-activity,ON,OFF}"
bind M command-prompt -p \
    "Watching for silence (0 disables; current: #{monitor-silence}):" \
    "setw monitor-silence %%"

# Set xterm window status.
set-option -g set-titles on
set-option -g set-titles-string '#H  ###I.#P  #W (#S)'
set-option -g allow-rename off


### Colors.
set -g status-style "fg=white,bg=black"
set -g message-style "fg=black,bg=green"
setw -g window-status-bell-style "fg=black,bg=green,blink"
setw -g window-status-current-style "fg=blue,bg=white"

# Call out the active pane a bit more.
set -g pane-active-border-style "fg=black,bg=brightblack"

# Only show the pane title if it's a custom title.
# (The default hostname title is just noise.)
set -g pane-border-format "#[fg=black#,bg=brightblack]#{pane_id} #{pane_index}#{?pane_active,*,}#{?#{==:#{host},#{pane_title}},, #{pane_title}}"

### Status bar.
set -g status-right-length 50
set -g status-right "#[fg=cyan]#h"
set -g pane-border-status bottom

# vim:ft=tmux
